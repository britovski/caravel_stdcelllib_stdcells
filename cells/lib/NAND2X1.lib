library (ls05_stdcells) {
  capacitive_load_unit (1.0, pf);
  current_unit: "1uA";
  default_operating_conditions: typical;
  delay_model: table_lookup;
  in_place_swap_mode: match_footprint;
  input_threshold_pct_fall: 50.0;
  input_threshold_pct_rise: 50.0;
  leakage_power_unit: "1nW";
  nom_process: 1.0;
  nom_temperature: 25.0;
  nom_voltage: 5.0;
  output_threshold_pct_fall: 50.0;
  output_threshold_pct_rise: 50.0;
  pulling_resistance_unit: "1kohm";
  slew_lower_threshold_pct_fall: 20.0;
  slew_lower_threshold_pct_rise: 20.0;
  slew_upper_threshold_pct_fall: 80.0;
  slew_upper_threshold_pct_rise: 80.0;
  time_unit: "1ns";
  voltage_unit: "1V";
  operating_conditions (typical) {
    process: 1.0;
    temperature: 25.0;
    voltage: 5.0;
  }
  lu_table_template (delay_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  power_lut_template (energy_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  lu_table_template (hold_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (hold_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  power_lut_template (passive_energy_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_transition_time;
  }
  power_lut_template (passive_energy_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_transition_time;
  }
  lu_table_template (recovery_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (recovery_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (removal_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  cell (NAND2X1) {
    area: 86112.0;
    cell_leakage_power: 0.1173;
    pin (B) {
      capacitance: 0.0011770830123972362;
      direction: input;
      fall_capacitance: 0.0011530798022740775;
      rise_capacitance: 0.0012010862225203954;
    }
    pin (A) {
      capacitance: 0.0013476463199385868;
      direction: input;
      fall_capacitance: 0.001349025247787476;
      rise_capacitance: 0.0013462673920896975;
    }
    pin (Y) {
      direction: output;
      function: "!(B&A)";
      timing () {
        related_pin: "B";
        timing_sense: negative_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.283993, 0.303803, 0.415625, 0.631250, 0.728125, 0.812500", \
            "1.177078, 1.100089, 1.109375, 1.368750, 1.534375, 1.687500", \
            "2.372480, 2.267311, 2.181250, 2.265625, 2.396875, 2.555937", \
            "4.473129, 4.352398, 4.190625, 4.065625, 4.096875, 4.175000", \
            "5.963425, 5.845059, 5.665625, 5.437500, 5.415625, 5.443750", \
            "8.973709, 8.843422, 8.625000, 8.287500, 8.187500, 8.128125"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.313438, 0.305937, 0.353125, 0.387500, 0.390625, 0.384375", \
            "1.269687, 1.209375, 1.171875, 1.275000, 1.346875, 1.400000", \
            "2.547813, 2.475000, 2.387500, 2.337500, 2.384375, 2.459375", \
            "4.782187, 4.700000, 4.587500, 4.409375, 4.368750, 4.365625", \
            "6.382187, 6.296875, 6.168750, 5.950000, 5.871875, 5.828125", \
            "9.579062, 9.493750, 9.353125, 9.078125, 8.965625, 8.871875"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.487623, 0.572865, 0.860781, 1.746875, 2.243750, 2.728125", \
            "1.931250, 1.932232, 2.025000, 2.650000, 3.071875, 3.515625", \
            "3.856250, 3.856250, 3.859375, 4.209375, 4.531250, 4.900000", \
            "7.228125, 7.228125, 7.225000, 7.296875, 7.471875, 7.715625", \
            "9.631250, 9.634375, 9.631250, 9.640625, 9.725000, 9.890625", \
            "14.443750, 14.443750, 14.443750, 14.443750, 14.443750, 14.484375"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.452812, 0.490625, 0.712188, 1.496875, 1.953125, 2.428125", \
            "1.778125, 1.778125, 1.800000, 2.215625, 2.546875, 2.916562", \
            "3.546875, 3.550000, 3.550000, 3.675000, 3.878125, 4.134375", \
            "6.646875, 6.646875, 6.646875, 6.646875, 6.690625, 6.793750", \
            "8.859375, 8.859375, 8.859375, 8.859375, 8.859375, 8.893750", \
            "13.287500, 13.287500, 13.287500, 13.287500, 13.287500, 13.287500"
          );
        }
      }
      timing () {
        related_pin: "A";
        timing_sense: negative_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.287134, 0.311233, 0.440625, 0.703125, 0.831250, 0.943750", \
            "1.177310, 1.109010, 1.121875, 1.409375, 1.600000, 1.778125", \
            "2.378085, 2.273273, 2.190625, 2.296875, 2.443750, 2.619531", \
            "4.476347, 4.355244, 4.196875, 4.087500, 4.131250, 4.221875", \
            "5.967384, 5.847491, 5.671875, 5.456250, 5.443750, 5.484375", \
            "8.973786, 8.846273, 8.628125, 8.303125, 8.212500, 8.156250"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.332439, 0.352344, 0.406250, 0.453125, 0.450000, 0.431250", \
            "1.288695, 1.296875, 1.328125, 1.459375, 1.543750, 1.612500", \
            "2.566821, 2.571875, 2.587500, 2.681250, 2.746875, 2.821875", \
            "4.804321, 4.803125, 4.812500, 4.871875, 4.918750, 4.978125", \
            "6.404321, 6.400000, 6.403125, 6.453125, 6.490625, 6.537500", \
            "9.601196, 9.600000, 9.593750, 9.621875, 9.653125, 9.687500"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.494534, 0.582170, 0.875000, 1.768750, 2.243750, 2.696875", \
            "1.937500, 1.936563, 2.034375, 2.671875, 3.103125, 3.559375", \
            "3.862500, 3.862500, 3.865625, 4.221875, 4.553125, 4.928125", \
            "7.231250, 7.231250, 7.231250, 7.300000, 7.478125, 7.728125", \
            "9.637500, 9.637500, 9.637500, 9.643750, 9.728125, 9.893750", \
            "14.450000, 14.450000, 14.450000, 14.450000, 14.450000, 14.487500"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.451094, 0.465625, 0.579688, 1.109375, 1.440625, 1.796875", \
            "1.775000, 1.778125, 1.781250, 1.950000, 2.128125, 2.343750", \
            "3.546875, 3.550000, 3.546875, 3.571875, 3.643750, 3.753125", \
            "6.643750, 6.646875, 6.646875, 6.643750, 6.646875, 6.665625", \
            "8.859375, 8.859375, 8.859375, 8.859375, 8.859375, 8.857187", \
            "13.287500, 13.284375, 13.287500, 13.287500, 13.284375, 13.287500"
          );
        }
      }
    }
  }
}