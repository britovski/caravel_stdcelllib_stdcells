library (ls05_stdcells) {
  capacitive_load_unit (1.0, pf);
  current_unit: "1uA";
  default_operating_conditions: typical;
  delay_model: table_lookup;
  in_place_swap_mode: match_footprint;
  input_threshold_pct_fall: 50.0;
  input_threshold_pct_rise: 50.0;
  leakage_power_unit: "1nW";
  nom_process: 1.0;
  nom_temperature: 25.0;
  nom_voltage: 5.0;
  output_threshold_pct_fall: 50.0;
  output_threshold_pct_rise: 50.0;
  pulling_resistance_unit: "1kohm";
  slew_lower_threshold_pct_fall: 20.0;
  slew_lower_threshold_pct_rise: 20.0;
  slew_upper_threshold_pct_fall: 80.0;
  slew_upper_threshold_pct_rise: 80.0;
  time_unit: "1ns";
  voltage_unit: "1V";
  operating_conditions (typical) {
    process: 1.0;
    temperature: 25.0;
    voltage: 5.0;
  }
  lu_table_template (delay_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  power_lut_template (energy_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  lu_table_template (hold_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (hold_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  power_lut_template (passive_energy_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_transition_time;
  }
  power_lut_template (passive_energy_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_transition_time;
  }
  lu_table_template (recovery_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (recovery_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (removal_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  cell (OR2X2) {
    area: 114816.0;
    cell_leakage_power: 0.1173;
    pin (B) {
      capacitance: 0.0013331272794795436;
      direction: input;
      fall_capacitance: 0.001334905683098552;
      rise_capacitance: 0.0013313488758605351;
    }
    pin (A) {
      capacitance: 0.0011621089417616108;
      direction: input;
      fall_capacitance: 0.0011914531191420225;
      rise_capacitance: 0.0011327647643811993;
    }
    pin (Y) {
      direction: output;
      function: "!(!B&!A)";
      timing () {
        related_pin: "B";
        timing_sense: positive_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.282771, 0.225960, 0.168750, 0.034375, -0.034375, -0.109375", \
            "1.177313, 1.059595, 0.921852, 0.703125, 0.606250, 0.518750", \
            "2.373991, 2.241844, 2.050075, 1.718750, 1.587500, 1.468750", \
            "4.470444, 4.329786, 4.106462, 3.653125, 3.453125, 3.287500", \
            "5.971019, 5.829910, 5.590877, 5.087500, 4.856250, 4.656250", \
            "8.971627, 8.826907, 8.578418, 8.012500, 7.746875, 7.496875"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.191728, 0.262813, 0.403125, 0.621875, 0.734375, 0.840625", \
            "0.641872, 0.703125, 0.821875, 1.209375, 1.381250, 1.521875", \
            "1.248024, 1.306250, 1.406250, 1.731250, 1.943750, 2.171875", \
            "2.307572, 2.362500, 2.456250, 2.725000, 2.896875, 3.087500", \
            "3.060763, 3.118750, 3.212500, 3.459375, 3.618750, 3.790625", \
            "4.579739, 4.637500, 4.718750, 4.962500, 5.106250, 5.250000"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.487792, 0.513541, 0.634375, 1.025000, 1.253125, 1.484375", \
            "1.931250, 1.928345, 1.943727, 2.109375, 2.278125, 2.471875", \
            "3.853125, 3.853125, 3.856325, 3.900000, 3.956250, 4.053125", \
            "7.225000, 7.225000, 7.225000, 7.237500, 7.259375, 7.287500", \
            "9.628125, 9.628125, 9.628125, 9.631250, 9.646875, 9.668750", \
            "14.440625, 14.440625, 14.440625, 14.443750, 14.443750, 14.453125"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.295938, 0.328125, 0.454688, 0.868750, 1.071875, 1.281250", \
            "1.166094, 1.168750, 1.225000, 1.496875, 1.687500, 1.893750", \
            "2.334375, 2.332188, 2.346875, 2.525000, 2.671875, 2.837500", \
            "4.371875, 4.371875, 4.373438, 4.453125, 4.550000, 4.665625", \
            "5.828125, 5.828125, 5.828125, 5.868750, 5.940625, 6.034375", \
            "8.743750, 8.743750, 8.740625, 8.743750, 8.775000, 8.834375"
          );
        }
      }
      timing () {
        related_pin: "A";
        timing_sense: positive_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.284228, 0.220332, 0.150000, -0.037500, -0.143750, -0.253125", \
            "1.175379, 1.053210, 0.912511, 0.687500, 0.578125, 0.471875", \
            "2.372766, 2.235429, 2.037768, 1.709375, 1.581250, 1.456250", \
            "4.471186, 4.326489, 4.091023, 3.634375, 3.437500, 3.275000", \
            "5.971679, 5.823487, 5.578562, 5.065625, 4.834375, 4.637500", \
            "8.972199, 8.820480, 8.562976, 7.984375, 7.712500, 7.465625"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.185313, 0.266563, 0.415625, 0.693750, 0.840625, 0.984375", \
            "0.635312, 0.700000, 0.825000, 1.231250, 1.428125, 1.600000", \
            "1.241563, 1.303125, 1.406250, 1.743750, 1.965625, 2.206250", \
            "2.300938, 2.359375, 2.453125, 2.734375, 2.912500, 3.112500", \
            "3.054063, 3.115625, 3.209375, 3.465625, 3.631250, 3.812500", \
            "4.572812, 4.634375, 4.715625, 4.965625, 5.115625, 5.265625"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.485203, 0.516526, 0.637500, 1.062500, 1.312500, 1.562500", \
            "1.928125, 1.928210, 1.953136, 2.150000, 2.328125, 2.525000", \
            "3.856250, 3.853125, 3.856518, 3.946875, 4.037500, 4.150000", \
            "7.221875, 7.225000, 7.225000, 7.243750, 7.290625, 7.353125", \
            "9.631250, 9.631250, 9.631250, 9.634375, 9.659375, 9.703125", \
            "14.440625, 14.440625, 14.440625, 14.440625, 14.443750, 14.459375"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.298437, 0.337500, 0.482187, 0.971875, 1.221875, 1.468750", \
            "1.168281, 1.168750, 1.221875, 1.515625, 1.731250, 1.968750", \
            "2.334375, 2.332813, 2.346875, 2.528125, 2.671875, 2.843750", \
            "4.371875, 4.371875, 4.370313, 4.453125, 4.546875, 4.665625", \
            "5.831250, 5.828125, 5.828125, 5.868750, 5.937500, 6.031250", \
            "8.740625, 8.740625, 8.743750, 8.743750, 8.771875, 8.834375"
          );
        }
      }
    }
  }
}