library (ls05_stdcells) {
  capacitive_load_unit (1.0, pf);
  current_unit: "1uA";
  default_operating_conditions: typical;
  delay_model: table_lookup;
  in_place_swap_mode: match_footprint;
  input_threshold_pct_fall: 50.0;
  input_threshold_pct_rise: 50.0;
  leakage_power_unit: "1nW";
  nom_process: 1.0;
  nom_temperature: 25.0;
  nom_voltage: 5.0;
  output_threshold_pct_fall: 50.0;
  output_threshold_pct_rise: 50.0;
  pulling_resistance_unit: "1kohm";
  slew_lower_threshold_pct_fall: 20.0;
  slew_lower_threshold_pct_rise: 20.0;
  slew_upper_threshold_pct_fall: 80.0;
  slew_upper_threshold_pct_rise: 80.0;
  time_unit: "1ns";
  voltage_unit: "1V";
  operating_conditions (typical) {
    process: 1.0;
    temperature: 25.0;
    voltage: 5.0;
  }
  lu_table_template (delay_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  power_lut_template (energy_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  lu_table_template (hold_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (hold_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  power_lut_template (passive_energy_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_transition_time;
  }
  power_lut_template (passive_energy_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_transition_time;
  }
  lu_table_template (recovery_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (recovery_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (removal_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  cell (MUX2X1) {
    area: 172224.0;
    cell_leakage_power: 0.1173;
    pin (S) {
      capacitance: 0.0022789626371229033;
      direction: input;
      fall_capacitance: 0.002294043907053507;
      rise_capacitance: 0.0022638813671923;
    }
    pin (B) {
      capacitance: 0.0013377107753348072;
      direction: input;
      fall_capacitance: 0.0013399277974262673;
      rise_capacitance: 0.0013354937532433471;
    }
    pin (A) {
      capacitance: 0.001337712473705384;
      direction: input;
      fall_capacitance: 0.001339934571486993;
      rise_capacitance: 0.0013354903759237751;
    }
    pin (Y) {
      direction: output;
      function: "!(!S&B&!A|!S&B&A|S&B&A|S&!B&A)";
      timing () {
        related_pin: "S";
        timing_sense: non_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.528471, 0.532237, 0.608984, 0.839063, 0.937500, 1.018750", \
            "2.108928, 2.060703, 2.045313, 2.171875, 2.289531, 2.426562", \
            "4.216355, 4.153435, 4.093750, 4.090625, 4.142187, 4.226562", \
            "7.908401, 7.836504, 7.740625, 7.623437, 7.615625, 7.628125", \
            "10.544302, 10.469389, 10.364063, 10.200000, 10.162500, 10.146875", \
            "15.817705, 15.739775, 15.623438, 15.406250, 15.326563, 15.270313"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.317012, 0.317891, 0.368750, 0.398438, 0.403125, 0.403125", \
            "1.272861, 1.231250, 1.198438, 1.310938, 1.393750, 1.443750", \
            "2.550922, 2.496875, 2.423438, 2.398437, 2.445313, 2.521875", \
            "4.788381, 4.698437, 4.629687, 4.495312, 4.467188, 4.465625", \
            "6.377606, 6.323438, 6.226563, 6.035937, 5.990625, 5.957813", \
            "9.583680, 9.465625, 9.400000, 9.193750, 9.057813, 9.023438"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.793750, 0.794737, 0.871875, 1.227656, 1.484375, 1.762500", \
            "3.090625, 3.093750, 3.094141, 3.173437, 3.300000, 3.456250", \
            "6.159375, 6.160937, 6.159375, 6.159453, 6.173437, 6.229687", \
            "11.528125, 11.528125, 11.528125, 11.526562, 11.526563, 11.527539", \
            "15.359375, 15.359375, 15.359375, 15.359375, 15.359375, 15.359375", \
            "23.026563, 23.026563, 23.026563, 23.026563, 23.026563, 23.026563"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.459557, 0.492188, 0.698711, 1.401563, 1.767188, 2.125000", \
            "1.787500, 1.784375, 1.804688, 2.175000, 2.476562, 2.829688", \
            "3.557813, 3.556250, 3.556250, 3.665625, 3.850000, 4.079687", \
            "6.656250, 6.656250, 6.654687, 6.656172, 6.685938, 6.778125", \
            "8.867187, 8.868750, 8.868750, 8.865625, 8.870313, 8.890625", \
            "13.293750, 13.293750, 13.293750, 13.295313, 13.295313, 13.293750"
          );
        }
      }
      timing () {
        related_pin: "B";
        timing_sense: negative_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.553454, 0.587500, 0.705156, 1.068750, 1.250000, 1.418750", \
            "2.131991, 2.140625, 2.190625, 2.437500, 2.612500, 2.803125", \
            "4.241546, 4.237500, 4.259375, 4.418750, 4.543750, 4.693750", \
            "7.932339, 7.921875, 7.921875, 8.006250, 8.090625, 8.187500", \
            "10.569815, 10.559375, 10.553125, 10.606250, 10.671875, 10.750000", \
            "15.844980, 15.831250, 15.818750, 15.837500, 15.875000, 15.928125"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.338539, 0.346719, 0.381250, 0.350000, 0.303125, 0.243750", \
            "1.294772, 1.300000, 1.315625, 1.400000, 1.456250, 1.487500", \
            "2.572893, 2.573437, 2.581250, 2.631250, 2.673438, 2.725000", \
            "4.810391, 4.806250, 4.807812, 4.839062, 4.864063, 4.895313", \
            "6.410390, 6.404688, 6.404688, 6.423437, 6.445313, 6.470313", \
            "9.607263, 9.603125, 9.595313, 9.604688, 9.618750, 9.635938"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.793750, 0.792187, 0.831250, 1.087813, 1.293750, 1.540625", \
            "3.093750, 3.093750, 3.093750, 3.112500, 3.168750, 3.259375", \
            "6.159375, 6.159375, 6.162500, 6.159375, 6.159375, 6.168750", \
            "11.528125, 11.525000, 11.525000, 11.525000, 11.525000, 11.525000", \
            "15.359375, 15.359375, 15.359375, 15.359375, 15.359375, 15.359375", \
            "23.028125, 23.025000, 23.025000, 23.025000, 23.028125, 23.028125"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.457528, 0.475000, 0.620938, 1.187500, 1.490625, 1.793750", \
            "1.787500, 1.784375, 1.790625, 2.006250, 2.231250, 2.504062", \
            "3.556250, 3.556250, 3.556250, 3.587500, 3.678125, 3.818750", \
            "6.656250, 6.656250, 6.656250, 6.656250, 6.659375, 6.681250", \
            "8.867187, 8.868750, 8.865625, 8.868750, 8.865625, 8.868750", \
            "13.293750, 13.293750, 13.296875, 13.293750, 13.293750, 13.293750"
          );
        }
      }
      timing () {
        related_pin: "A";
        timing_sense: negative_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.553838, 0.587500, 0.705156, 1.068750, 1.250000, 1.418750", \
            "2.135382, 2.140625, 2.190625, 2.437500, 2.612500, 2.803125", \
            "4.241779, 4.237500, 4.259375, 4.418750, 4.543750, 4.693750", \
            "7.935692, 7.921875, 7.925000, 8.006250, 8.090625, 8.187500", \
            "10.570043, 10.562500, 10.556250, 10.606250, 10.671875, 10.750000", \
            "15.845203, 15.831250, 15.818750, 15.837500, 15.875000, 15.928125"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.336344, 0.346719, 0.381250, 0.350000, 0.303125, 0.243750", \
            "1.295702, 1.300000, 1.315625, 1.400000, 1.453125, 1.487500", \
            "2.573824, 2.573437, 2.581250, 2.631250, 2.670313, 2.725000", \
            "4.811322, 4.806250, 4.807812, 4.835937, 4.864063, 4.895313", \
            "6.411322, 6.404688, 6.401563, 6.423437, 6.445313, 6.470313", \
            "9.608196, 9.603125, 9.595313, 9.604688, 9.618750, 9.635938"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.793750, 0.792187, 0.831250, 1.087813, 1.293750, 1.540625", \
            "3.093750, 3.093750, 3.093750, 3.109375, 3.168750, 3.259375", \
            "6.159375, 6.159375, 6.159375, 6.159375, 6.159375, 6.168750", \
            "11.528125, 11.525000, 11.528125, 11.525000, 11.525000, 11.525000", \
            "15.359375, 15.359375, 15.359375, 15.359375, 15.359375, 15.359375", \
            "23.028125, 23.025000, 23.025000, 23.025000, 23.025000, 23.028125"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.459886, 0.475000, 0.620938, 1.187500, 1.490625, 1.793750", \
            "1.784375, 1.784375, 1.787500, 2.006250, 2.231250, 2.504062", \
            "3.556250, 3.556250, 3.556250, 3.587500, 3.681250, 3.818750", \
            "6.653125, 6.653125, 6.653125, 6.656250, 6.656250, 6.681250", \
            "8.865625, 8.868750, 8.868750, 8.865625, 8.865625, 8.868750", \
            "13.293750, 13.293750, 13.293750, 13.293750, 13.293750, 13.293750"
          );
        }
      }
    }
  }
}