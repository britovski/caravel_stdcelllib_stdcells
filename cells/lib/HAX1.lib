library (ls05_stdcells) {
  capacitive_load_unit (1.0, pf);
  current_unit: "1uA";
  default_operating_conditions: typical;
  delay_model: table_lookup;
  in_place_swap_mode: match_footprint;
  input_threshold_pct_fall: 50.0;
  input_threshold_pct_rise: 50.0;
  leakage_power_unit: "1nW";
  nom_process: 1.0;
  nom_temperature: 25.0;
  nom_voltage: 5.0;
  output_threshold_pct_fall: 50.0;
  output_threshold_pct_rise: 50.0;
  pulling_resistance_unit: "1kohm";
  slew_lower_threshold_pct_fall: 20.0;
  slew_lower_threshold_pct_rise: 20.0;
  slew_upper_threshold_pct_fall: 80.0;
  slew_upper_threshold_pct_rise: 80.0;
  time_unit: "1ns";
  voltage_unit: "1V";
  operating_conditions (typical) {
    process: 1.0;
    temperature: 25.0;
    voltage: 5.0;
  }
  lu_table_template (delay_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  power_lut_template (energy_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  lu_table_template (hold_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (hold_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  power_lut_template (passive_energy_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_transition_time;
  }
  power_lut_template (passive_energy_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_transition_time;
  }
  lu_table_template (recovery_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (recovery_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (removal_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  cell (HAX1) {
    area: 1.0;
    cell_leakage_power: 0.1173;
    pin (B) {
      capacitance: 0.0019309423851050882;
      direction: input;
      fall_capacitance: 0.0019308671363426383;
      rise_capacitance: 0.0019310176338675378;
    }
    pin (A) {
      capacitance: 0.0023665897910730544;
      direction: input;
      fall_capacitance: 0.00236450358546399;
      rise_capacitance: 0.0023686759966821194;
    }
    pin (YS) {
      direction: output;
      function: "!(!B&!A|B&A)";
      timing () {
        related_pin: "B";
        timing_sense: non_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.312822, 0.310905, 0.339062, 0.348438, 0.342188, 0.328125", \
            "1.202627, 1.154511, 1.116499, 1.150000, 1.181250, 1.206250", \
            "2.403407, 2.338716, 2.252436, 2.181250, 2.192188, 2.215625", \
            "4.501705, 4.427319, 4.313374, 4.125000, 4.071875, 4.050000", \
            "6.001708, 5.925568, 5.799311, 5.565625, 5.481250, 5.426562", \
            "9.001661, 8.924810, 8.786811, 8.495312, 8.376563, 8.275000"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.184922, 0.223633, 0.281250, 0.371875, 0.421875, 0.465625", \
            "0.635671, 0.653125, 0.690156, 0.821875, 0.875000, 0.921875", \
            "1.238199, 1.254688, 1.268750, 1.372266, 1.445313, 1.514063", \
            "2.301536, 2.310937, 2.315625, 2.359375, 2.406797, 2.475000", \
            "3.056250, 3.067187, 3.068750, 3.089063, 3.123438, 3.170313", \
            "4.573466, 4.585938, 4.578125, 4.584375, 4.600000, 4.620313"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.485312, 0.506452, 0.598438, 0.954688, 1.193750, 1.443750", \
            "1.931250, 1.929439, 1.947749, 2.128125, 2.264063, 2.417187", \
            "3.854688, 3.853125, 3.857046, 3.939063, 4.032813, 4.142187", \
            "7.225000, 7.223437, 7.223438, 7.237500, 7.273437, 7.339062", \
            "9.629687, 9.629687, 9.631250, 9.632812, 9.646875, 9.679687", \
            "14.442188, 14.440625, 14.440625, 14.442188, 14.443750, 14.451562"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.294928, 0.356328, 0.542188, 1.068750, 1.345313, 1.618750", \
            "1.164661, 1.170313, 1.223438, 1.578125, 1.843164, 2.118750", \
            "2.331250, 2.334414, 2.350000, 2.510937, 2.676562, 2.885469", \
            "4.371875, 4.371875, 4.373438, 4.448437, 4.525000, 4.625000", \
            "5.828125, 5.828125, 5.828672, 5.871875, 5.931250, 6.006250", \
            "8.740625, 8.740625, 8.740625, 8.753125, 8.787500, 8.837500"
          );
        }
      }
      timing () {
        related_pin: "A";
        timing_sense: non_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.313934, 0.321205, 0.350000, 0.415625, 0.446875, 0.468750", \
            "1.208299, 1.167834, 1.132106, 1.148438, 1.178125, 1.210938", \
            "2.405117, 2.350128, 2.275856, 2.200000, 2.200000, 2.210937", \
            "4.505385, 4.440972, 4.341481, 4.168750, 4.112500, 4.081250", \
            "6.005508, 5.939605, 5.828981, 5.617187, 5.535937, 5.479687", \
            "9.004095, 8.936524, 8.816481, 8.559375, 8.450000, 8.353125"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.194169, 0.226758, 0.265625, 0.292188, 0.306250, 0.314063", \
            "0.644220, 0.664063, 0.694531, 0.787500, 0.809375, 0.821875", \
            "1.247438, 1.267188, 1.279688, 1.366484, 1.420313, 1.468750", \
            "2.310017, 2.323437, 2.329688, 2.367187, 2.404922, 2.462500", \
            "3.063148, 3.079687, 3.084375, 3.103125, 3.129688, 3.168750", \
            "4.581960, 4.596875, 4.595312, 4.601562, 4.615625, 4.631250"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.487610, 0.501986, 0.568750, 0.792188, 0.932813, 1.076563", \
            "1.929688, 1.930430, 1.938356, 2.039062, 2.135938, 2.242187", \
            "3.854688, 3.854688, 3.853981, 3.890625, 3.934375, 3.995312", \
            "7.223437, 7.221875, 7.223438, 7.231250, 7.246875, 7.271875", \
            "9.631250, 9.629687, 9.629687, 9.631250, 9.640625, 9.656250", \
            "14.442188, 14.442188, 14.442187, 14.442188, 14.442188, 14.449219"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.293338, 0.332813, 0.451563, 0.767188, 0.926563, 1.082813", \
            "1.164453, 1.170313, 1.209375, 1.434375, 1.593750, 1.762500", \
            "2.331250, 2.332813, 2.346875, 2.482812, 2.592187, 2.715625", \
            "4.371875, 4.371875, 4.371875, 4.442187, 4.515625, 4.604687", \
            "5.828125, 5.829687, 5.829141, 5.870312, 5.923437, 5.996875", \
            "8.740625, 8.740625, 8.740625, 8.750000, 8.782813, 8.829687"
          );
        }
      }
    }
    pin (YC) {
      direction: output;
      function: "(B&A)";
      timing () {
        related_pin: "B";
        timing_sense: positive_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.303607, 0.315742, 0.387500, 0.446875, 0.459375, 0.465625", \
            "1.193960, 1.133120, 1.121875, 1.287500, 1.393750, 1.462500", \
            "2.393152, 2.308162, 2.221875, 2.240625, 2.321875, 2.425000", \
            "4.492787, 4.392557, 4.256250, 4.103125, 4.100000, 4.140625", \
            "5.992684, 5.889439, 5.731250, 5.503125, 5.459375, 5.453125", \
            "8.992582, 8.886320, 8.712500, 8.390625, 8.284375, 8.212500"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.166560, 0.200000, 0.246875, 0.328125, 0.371875, 0.409375", \
            "0.617728, 0.615625, 0.644687, 0.775000, 0.821875, 0.865625", \
            "1.221323, 1.212500, 1.203125, 1.309375, 1.390625, 1.453125", \
            "2.281007, 2.268750, 2.237500, 2.246875, 2.293750, 2.368750", \
            "3.034248, 3.025000, 2.990625, 2.959375, 2.981250, 3.028125", \
            "4.553128, 4.540625, 4.493750, 4.431250, 4.425000, 4.425000"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.488665, 0.529805, 0.698594, 1.350000, 1.781250, 2.225000", \
            "1.931250, 1.930938, 1.984375, 2.337500, 2.575000, 2.840625", \
            "3.853125, 3.853125, 3.856250, 4.065625, 4.256250, 4.462500", \
            "7.225000, 7.225000, 7.221875, 7.256250, 7.368750, 7.521875", \
            "9.628125, 9.628125, 9.628125, 9.628125, 9.675000, 9.781250", \
            "14.443750, 14.440625, 14.440625, 14.443750, 14.443750, 14.450000"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.296592, 0.406406, 0.712500, 1.518750, 1.946875, 2.371875", \
            "1.164605, 1.181250, 1.312500, 1.984062, 2.425000, 2.890625", \
            "2.331250, 2.334375, 2.375000, 2.796875, 3.146875, 3.531250", \
            "4.371875, 4.371875, 4.378125, 4.546875, 4.750000, 5.031250", \
            "5.828125, 5.831250, 5.831250, 5.931250, 6.056250, 6.246875", \
            "8.743750, 8.740625, 8.740625, 8.778125, 8.850000, 8.953125"
          );
        }
      }
      timing () {
        related_pin: "A";
        timing_sense: positive_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.312161, 0.322772, 0.381250, 0.378125, 0.359375, 0.331250", \
            "1.206485, 1.158417, 1.143750, 1.284375, 1.365625, 1.403125", \
            "2.405647, 2.337562, 2.265625, 2.275000, 2.340625, 2.428125", \
            "4.503308, 4.428645, 4.315625, 4.178125, 4.168750, 4.200000", \
            "6.005708, 5.925648, 5.796875, 5.596875, 5.550000, 5.540625", \
            "9.004968, 8.922650, 8.781250, 8.506250, 8.412500, 8.343750"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.171832, 0.209375, 0.271875, 0.415625, 0.490625, 0.562500", \
            "0.620289, 0.625000, 0.652187, 0.781250, 0.853125, 0.928125", \
            "1.225303, 1.221875, 1.215625, 1.296875, 1.365625, 1.431250", \
            "2.284854, 2.278125, 2.253125, 2.253125, 2.287500, 2.343750", \
            "3.037970, 3.034375, 3.006250, 2.975000, 2.987500, 3.018750", \
            "4.557032, 4.553125, 4.509375, 4.456250, 4.443750, 4.437500"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.487210, 0.519959, 0.658594, 1.268750, 1.681250, 2.109375", \
            "1.928125, 1.930938, 1.971875, 2.293750, 2.509375, 2.750156", \
            "3.856250, 3.856250, 3.856250, 4.037500, 4.209375, 4.403125", \
            "7.225000, 7.225000, 7.221875, 7.243750, 7.337500, 7.475000", \
            "9.628125, 9.631250, 9.631250, 9.631250, 9.656250, 9.746875", \
            "14.440625, 14.440625, 14.440625, 14.443750, 14.442188, 14.443750"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.301470, 0.412500, 0.706250, 1.484375, 1.912500, 2.337500", \
            "1.167955, 1.178125, 1.300000, 1.942187, 2.353125, 2.775000", \
            "2.334375, 2.332422, 2.359375, 2.743750, 3.078125, 3.446875", \
            "4.371875, 4.371875, 4.375000, 4.487500, 4.671875, 4.937500", \
            "5.831250, 5.828125, 5.828125, 5.881250, 5.975000, 6.143750", \
            "8.740625, 8.740625, 8.743750, 8.759375, 8.796875, 8.856250"
          );
        }
      }
    }
  }
}