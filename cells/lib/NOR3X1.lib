library (ls05_stdcells) {
  capacitive_load_unit (1.0, pf);
  current_unit: "1uA";
  default_operating_conditions: typical;
  delay_model: table_lookup;
  in_place_swap_mode: match_footprint;
  input_threshold_pct_fall: 50.0;
  input_threshold_pct_rise: 50.0;
  leakage_power_unit: "1nW";
  nom_process: 1.0;
  nom_temperature: 25.0;
  nom_voltage: 5.0;
  output_threshold_pct_fall: 50.0;
  output_threshold_pct_rise: 50.0;
  pulling_resistance_unit: "1kohm";
  slew_lower_threshold_pct_fall: 20.0;
  slew_lower_threshold_pct_rise: 20.0;
  slew_upper_threshold_pct_fall: 80.0;
  slew_upper_threshold_pct_rise: 80.0;
  time_unit: "1ns";
  voltage_unit: "1V";
  operating_conditions (typical) {
    process: 1.0;
    temperature: 25.0;
    voltage: 5.0;
  }
  lu_table_template (delay_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  power_lut_template (energy_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  lu_table_template (hold_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (hold_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  power_lut_template (passive_energy_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_transition_time;
  }
  power_lut_template (passive_energy_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_transition_time;
  }
  lu_table_template (recovery_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (recovery_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (removal_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  cell (NOR3X1) {
    area: 1.0;
    cell_leakage_power: 0.1173;
    pin (C) {
      capacitance: 0.0013924565935774082;
      direction: input;
      fall_capacitance: 0.0014746361194624838;
      rise_capacitance: 0.0013102770676923327;
    }
    pin (B) {
      capacitance: 0.0016473291903183536;
      direction: input;
      fall_capacitance: 0.0017239446291879583;
      rise_capacitance: 0.0015707137514487492;
    }
    pin (A) {
      capacitance: 0.0018817460299384225;
      direction: input;
      fall_capacitance: 0.0018796000204600522;
      rise_capacitance: 0.0018838920394167924;
    }
    pin (Y) {
      direction: output;
      function: "(!C&!B&!A)";
      timing () {
        related_pin: "C";
        timing_sense: negative_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.361810, 0.396875, 0.518750, 0.787500, 0.909375, 1.018750", \
            "1.408206, 1.400613, 1.456250, 1.721875, 1.900000, 2.081250", \
            "2.808015, 2.782895, 2.796875, 2.965625, 3.106250, 3.259375", \
            "5.261033, 5.227128, 5.200000, 5.275000, 5.359375, 5.468750", \
            "7.014125, 6.974141, 6.937500, 6.965625, 7.025000, 7.112500", \
            "10.517215, 10.477404, 10.425000, 10.393750, 10.421875, 10.468750"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.149660, 0.175000, 0.190625, 0.156250, 0.128125, 0.087500", \
            "0.600937, 0.575000, 0.611563, 0.715625, 0.737500, 0.740625", \
            "1.207187, 1.171875, 1.150000, 1.275000, 1.350000, 1.400000", \
            "2.266563, 2.228125, 2.171875, 2.171875, 2.237500, 2.328125", \
            "3.022813, 2.984375, 2.918750, 2.862500, 2.890625, 2.953125", \
            "4.538438, 4.493750, 4.428125, 4.309375, 4.284375, 4.293750"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.539531, 0.550000, 0.646875, 1.106250, 1.456250, 1.831250", \
            "2.103125, 2.103125, 2.102734, 2.250000, 2.400000, 2.578125", \
            "4.187500, 4.190625, 4.187500, 4.200000, 4.256250, 4.353125", \
            "7.837500, 7.837500, 7.837500, 7.837500, 7.838281, 7.843750", \
            "10.443750, 10.443750, 10.443750, 10.443750, 10.443750, 10.443750", \
            "15.656250, 15.653125, 15.656250, 15.656250, 15.656250, 15.656250"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.299299, 0.433594, 0.778125, 1.615625, 2.053125, 2.484375", \
            "1.168437, 1.203125, 1.403125, 2.198438, 2.700000, 3.203125", \
            "2.334375, 2.337500, 2.434375, 3.031250, 3.453125, 3.912500", \
            "4.378125, 4.374844, 4.396875, 4.753125, 5.068750, 5.431250", \
            "5.834375, 5.831250, 5.834375, 6.081250, 6.337500, 6.646875", \
            "8.746875, 8.743750, 8.746719, 8.850000, 9.012500, 9.237500"
          );
        }
      }
      timing () {
        related_pin: "B";
        timing_sense: negative_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.374033, 0.406250, 0.512500, 0.737500, 0.831250, 0.912500", \
            "1.422307, 1.428125, 1.484375, 1.721875, 1.878125, 2.037500", \
            "2.822468, 2.818750, 2.846875, 3.012500, 3.137500, 3.275000", \
            "5.275751, 5.262500, 5.265625, 5.368750, 5.453125, 5.559375", \
            "7.028972, 7.012500, 7.006250, 7.078125, 7.146875, 7.234375", \
            "10.535236, 10.518750, 10.503125, 10.531250, 10.581250, 10.640625"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.152256, 0.184375, 0.218750, 0.240625, 0.243750, 0.237500", \
            "0.604062, 0.581250, 0.624063, 0.768750, 0.815625, 0.850000", \
            "1.210312, 1.175000, 1.159375, 1.306250, 1.400000, 1.475000", \
            "2.269688, 2.231250, 2.178125, 2.190625, 2.265625, 2.371875", \
            "3.025938, 2.987500, 2.925000, 2.878125, 2.915625, 2.987500", \
            "4.541563, 4.500000, 4.431250, 4.318750, 4.303125, 4.321875"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.540781, 0.543750, 0.615625, 1.031250, 1.371875, 1.743750", \
            "2.103125, 2.103125, 2.104688, 2.190625, 2.303125, 2.437500", \
            "4.187500, 4.187500, 4.187500, 4.193750, 4.221875, 4.284375", \
            "7.834375, 7.837500, 7.834375, 7.837500, 7.837500, 7.837500", \
            "10.440625, 10.440625, 10.443750, 10.443750, 10.443750, 10.443750", \
            "15.656250, 15.656250, 15.656250, 15.653125, 15.656250, 15.656250"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.308509, 0.444844, 0.800000, 1.671875, 2.128125, 2.575000", \
            "1.177812, 1.209375, 1.418750, 2.238594, 2.756250, 3.275000", \
            "2.343750, 2.346875, 2.446875, 3.062500, 3.496875, 3.968750", \
            "4.381250, 4.384219, 4.403125, 4.775000, 5.100000, 5.475000", \
            "5.837500, 5.840625, 5.843750, 6.100000, 6.362500, 6.681250", \
            "8.750000, 8.753125, 8.753125, 8.862500, 9.031250, 9.262500"
          );
        }
      }
      timing () {
        related_pin: "A";
        timing_sense: negative_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.370910, 0.390625, 0.471875, 0.618750, 0.671875, 0.709375", \
            "1.420206, 1.412500, 1.437500, 1.611094, 1.737500, 1.862500", \
            "2.823577, 2.800000, 2.796875, 2.896875, 2.984375, 3.087500", \
            "5.277472, 5.243750, 5.215625, 5.243750, 5.290625, 5.359375", \
            "7.027746, 6.993750, 6.956250, 6.950000, 6.981250, 7.028125", \
            "10.533468, 10.500000, 10.453125, 10.400000, 10.409375, 10.431250"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.157366, 0.193750, 0.250000, 0.331250, 0.368750, 0.396875", \
            "0.607187, 0.587500, 0.634063, 0.828125, 0.906250, 0.971875", \
            "1.213437, 1.181250, 1.165625, 1.340625, 1.459375, 1.559375", \
            "2.272813, 2.234375, 2.184375, 2.212500, 2.300000, 2.418750", \
            "3.032188, 2.990625, 2.931250, 2.896875, 2.943750, 3.028125", \
            "4.544688, 4.503125, 4.437500, 4.331250, 4.321875, 4.350000"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.541671, 0.546875, 0.628125, 1.143750, 1.543750, 1.959375", \
            "2.103125, 2.103125, 2.106250, 2.218750, 2.346875, 2.506250", \
            "4.187500, 4.190625, 4.187500, 4.196875, 4.237500, 4.318750", \
            "7.837500, 7.837500, 7.834375, 7.837500, 7.837812, 7.840625", \
            "10.443750, 10.443750, 10.443750, 10.443750, 10.443750, 10.443750", \
            "15.656250, 15.656250, 15.656250, 15.656250, 15.653125, 15.656250"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.317482, 0.459375, 0.825000, 1.750000, 2.243750, 2.725000", \
            "1.184062, 1.218750, 1.434375, 2.284375, 2.818750, 3.365625", \
            "2.350000, 2.356250, 2.462500, 3.096875, 3.550000, 4.037500", \
            "4.390625, 4.390625, 4.412500, 4.800000, 5.137500, 5.525000", \
            "5.846875, 5.850000, 5.850000, 6.118750, 6.390625, 6.721875", \
            "8.759375, 8.762500, 8.762500, 8.871875, 9.053125, 9.293750"
          );
        }
      }
    }
  }
}