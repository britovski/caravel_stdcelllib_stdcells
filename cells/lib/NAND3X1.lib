library (ls05_stdcells) {
  capacitive_load_unit (1.0, pf);
  current_unit: "1uA";
  default_operating_conditions: typical;
  delay_model: table_lookup;
  in_place_swap_mode: match_footprint;
  input_threshold_pct_fall: 50.0;
  input_threshold_pct_rise: 50.0;
  leakage_power_unit: "1nW";
  nom_process: 1.0;
  nom_temperature: 25.0;
  nom_voltage: 5.0;
  output_threshold_pct_fall: 50.0;
  output_threshold_pct_rise: 50.0;
  pulling_resistance_unit: "1kohm";
  slew_lower_threshold_pct_fall: 20.0;
  slew_lower_threshold_pct_rise: 20.0;
  slew_upper_threshold_pct_fall: 80.0;
  slew_upper_threshold_pct_rise: 80.0;
  time_unit: "1ns";
  voltage_unit: "1V";
  operating_conditions (typical) {
    process: 1.0;
    temperature: 25.0;
    voltage: 5.0;
  }
  lu_table_template (delay_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  power_lut_template (energy_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  lu_table_template (hold_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (hold_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  power_lut_template (passive_energy_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_transition_time;
  }
  power_lut_template (passive_energy_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_transition_time;
  }
  lu_table_template (recovery_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (recovery_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (removal_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  cell (NAND3X1) {
    area: 114816.0;
    cell_leakage_power: 0.1173;
    pin (C) {
      capacitance: 0.0010189271119962998;
      direction: input;
      fall_capacitance: 0.0009774134228979472;
      rise_capacitance: 0.0010604408010946524;
    }
    pin (B) {
      capacitance: 0.0011475063618528098;
      direction: input;
      fall_capacitance: 0.001108722862316544;
      rise_capacitance: 0.0011862898613890758;
    }
    pin (A) {
      capacitance: 0.0012615350520328306;
      direction: input;
      fall_capacitance: 0.0012627982476606087;
      rise_capacitance: 0.0012602718564050522;
    }
    pin (Y) {
      direction: output;
      function: "!(C&B&A)";
      timing () {
        related_pin: "C";
        timing_sense: negative_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.283345, 0.296698, 0.390625, 0.546875, 0.612500, 0.665625", \
            "1.174276, 1.096275, 1.090625, 1.315625, 1.456250, 1.575000", \
            "2.365993, 2.265447, 2.165625, 2.218750, 2.331250, 2.475000", \
            "4.463463, 4.347554, 4.181250, 4.012500, 4.034375, 4.096875", \
            "5.973194, 5.822363, 5.653125, 5.396875, 5.343750, 5.365625", \
            "8.955167, 8.839448, 8.634375, 8.231250, 8.137500, 8.068750"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.407188, 0.403125, 0.475000, 0.612500, 0.665625, 0.706250", \
            "1.625938, 1.578125, 1.556250, 1.671875, 1.784375, 1.896875", \
            "3.250938, 3.193750, 3.128125, 3.112500, 3.162500, 3.237500", \
            "6.100937, 6.031250, 5.940625, 5.818750, 5.796875, 5.803125", \
            "8.135312, 8.065625, 7.962500, 7.796875, 7.750000, 7.725000", \
            "12.204062, 12.134375, 12.025000, 11.806250, 11.728125, 11.665625"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.490405, 0.576386, 0.878281, 1.781250, 2.268750, 2.743750", \
            "1.934375, 1.932736, 2.037500, 2.681250, 3.118750, 3.587500", \
            "3.859375, 3.856250, 3.865625, 4.234375, 4.571875, 4.950000", \
            "7.225000, 7.228125, 7.228125, 7.312500, 7.493750, 7.750000", \
            "9.634375, 9.634375, 9.634375, 9.646875, 9.746875, 9.921875", \
            "14.443750, 14.443750, 14.443750, 14.446875, 14.450000, 14.496875"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.581719, 0.593750, 0.746875, 1.393750, 1.809375, 2.240625", \
            "2.278125, 2.278125, 2.281250, 2.509375, 2.746875, 3.018750", \
            "4.543750, 4.543750, 4.543750, 4.568750, 4.665625, 4.815625", \
            "8.509375, 8.506250, 8.506250, 8.509375, 8.509062, 8.521875", \
            "11.337500, 11.340625, 11.340625, 11.337500, 11.337500, 11.340625", \
            "17.003125, 17.003125, 17.000000, 17.003125, 17.000000, 17.000000"
          );
        }
      }
      timing () {
        related_pin: "B";
        timing_sense: negative_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.286288, 0.304165, 0.409375, 0.609375, 0.700000, 0.778125", \
            "1.179745, 1.101988, 1.100000, 1.346875, 1.506250, 1.650000", \
            "2.369221, 2.268069, 2.175000, 2.243750, 2.365625, 2.519687", \
            "4.468741, 4.350240, 4.187500, 4.028125, 4.059375, 4.131250", \
            "5.976293, 5.825109, 5.656250, 5.412500, 5.365625, 5.393750", \
            "8.958451, 8.842150, 8.640625, 8.237500, 8.153125, 8.090625"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.422248, 0.437500, 0.506250, 0.637500, 0.684375, 0.712500", \
            "1.641003, 1.640625, 1.659375, 1.793750, 1.896875, 2.006250", \
            "3.269129, 3.259375, 3.262500, 3.331250, 3.400000, 3.478125", \
            "6.119130, 6.103125, 6.090625, 6.112500, 6.146875, 6.193750", \
            "8.153506, 8.137500, 8.118750, 8.121875, 8.143750, 8.175000", \
            "12.222256, 12.209375, 12.184375, 12.159375, 12.168750, 12.184375"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.499926, 0.585728, 0.892031, 1.812500, 2.300000, 2.765625", \
            "1.940625, 1.940070, 2.046875, 2.709375, 3.159375, 3.634375", \
            "3.865625, 3.865625, 3.868750, 4.250000, 4.596875, 4.984375", \
            "7.234375, 7.231250, 7.234375, 7.318750, 7.506250, 7.768750", \
            "9.640625, 9.640625, 9.640625, 9.653125, 9.756250, 9.928125", \
            "14.450000, 14.453125, 14.453125, 14.453125, 14.456250, 14.500000"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.580469, 0.584375, 0.668750, 1.128125, 1.453125, 1.803125", \
            "2.278125, 2.278125, 2.279063, 2.375000, 2.506250, 2.671875", \
            "4.543750, 4.543750, 4.543750, 4.546875, 4.571875, 4.640625", \
            "8.509375, 8.506250, 8.509375, 8.509375, 8.509375, 8.509375", \
            "11.340625, 11.340625, 11.337500, 11.340625, 11.340625, 11.340625", \
            "17.003125, 17.000000, 17.003125, 17.003125, 17.003125, 17.003125"
          );
        }
      }
      timing () {
        related_pin: "A";
        timing_sense: negative_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.289095, 0.311581, 0.431250, 0.678125, 0.793750, 0.900000", \
            "1.183047, 1.104636, 1.112500, 1.384375, 1.562500, 1.728125", \
            "2.372588, 2.273868, 2.181250, 2.268750, 2.403125, 2.570937", \
            "4.473317, 4.359164, 4.193750, 4.046875, 4.087500, 4.168750", \
            "5.981889, 5.828178, 5.662500, 5.425000, 5.387500, 5.428125", \
            "8.961193, 8.844839, 8.643750, 8.250000, 8.168750, 8.112500"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.423109, 0.425000, 0.471875, 0.543750, 0.556250, 0.556250", \
            "1.641862, 1.625000, 1.621875, 1.703125, 1.778125, 1.856250", \
            "3.269987, 3.246875, 3.225000, 3.237500, 3.275000, 3.325000", \
            "6.119987, 6.087500, 6.050000, 6.015625, 6.018750, 6.034375", \
            "8.154363, 8.121875, 8.081250, 8.021875, 8.012500, 8.012500", \
            "12.223113, 12.193750, 12.146875, 12.059375, 12.034375, 12.018750"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.503351, 0.598143, 0.912500, 1.856250, 2.356250, 2.837500", \
            "1.946875, 1.947002, 2.053125, 2.740625, 3.203125, 3.690625", \
            "3.871875, 3.871875, 3.875000, 4.268750, 4.628125, 5.028125", \
            "7.240625, 7.240625, 7.240625, 7.325000, 7.518750, 7.790625", \
            "9.646875, 9.643750, 9.646875, 9.656250, 9.759375, 9.943750", \
            "14.459375, 14.459375, 14.456250, 14.456250, 14.459375, 14.506250"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.580469, 0.587500, 0.665625, 1.153125, 1.496875, 1.875000", \
            "2.278125, 2.278125, 2.279063, 2.378125, 2.509375, 2.668750", \
            "4.543750, 4.543750, 4.543750, 4.546875, 4.581250, 4.646875", \
            "8.506250, 8.509375, 8.509375, 8.509375, 8.509375, 8.509375", \
            "11.337500, 11.340625, 11.340625, 11.337500, 11.337500, 11.340625", \
            "17.003125, 17.003125, 17.000000, 17.003125, 17.003125, 17.003125"
          );
        }
      }
    }
  }
}