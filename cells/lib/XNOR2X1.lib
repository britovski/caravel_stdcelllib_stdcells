library (ls05_stdcells) {
  capacitive_load_unit (1.0, pf);
  current_unit: "1uA";
  default_operating_conditions: typical;
  delay_model: table_lookup;
  in_place_swap_mode: match_footprint;
  input_threshold_pct_fall: 50.0;
  input_threshold_pct_rise: 50.0;
  leakage_power_unit: "1nW";
  nom_process: 1.0;
  nom_temperature: 25.0;
  nom_voltage: 5.0;
  output_threshold_pct_fall: 50.0;
  output_threshold_pct_rise: 50.0;
  pulling_resistance_unit: "1kohm";
  slew_lower_threshold_pct_fall: 20.0;
  slew_lower_threshold_pct_rise: 20.0;
  slew_upper_threshold_pct_fall: 80.0;
  slew_upper_threshold_pct_rise: 80.0;
  time_unit: "1ns";
  voltage_unit: "1V";
  operating_conditions (typical) {
    process: 1.0;
    temperature: 25.0;
    voltage: 5.0;
  }
  lu_table_template (delay_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  power_lut_template (energy_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  lu_table_template (hold_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (hold_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  power_lut_template (passive_energy_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_transition_time;
  }
  power_lut_template (passive_energy_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_transition_time;
  }
  lu_table_template (recovery_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (recovery_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (removal_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  cell (XNOR2X1) {
    area: 1.0;
    cell_leakage_power: 0.1173;
    pin (B) {
      capacitance: 0.002811906615155669;
      direction: input;
      fall_capacitance: 0.0028140032078669735;
      rise_capacitance: 0.0028098100224443643;
    }
    pin (A) {
      capacitance: 0.00224050154900285;
      direction: input;
      fall_capacitance: 0.0022702331784991378;
      rise_capacitance: 0.002210769919506562;
    }
    pin (Y) {
      direction: output;
      function: "!(B&!A|!B&A)";
      timing () {
        related_pin: "B";
        timing_sense: non_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.553744, 0.565625, 0.636953, 0.853125, 0.943750, 1.021875", \
            "2.134994, 2.121875, 2.134375, 2.267187, 2.376562, 2.498437", \
            "4.244379, 4.220312, 4.209375, 4.265625, 4.326562, 4.412500", \
            "7.935011, 7.906250, 7.875000, 7.867187, 7.893750, 7.932812", \
            "10.570944, 10.543750, 10.507813, 10.470312, 10.482813, 10.504688", \
            "15.844408, 15.815625, 15.773438, 15.707813, 15.695313, 15.693750"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.343868, 0.371797, 0.437500, 0.507813, 0.525000, 0.532813", \
            "1.301345, 1.323438, 1.365625, 1.517187, 1.618750, 1.706250", \
            "2.579306, 2.596875, 2.623438, 2.748437, 2.828125, 2.912500", \
            "4.816652, 4.801562, 4.850000, 4.953125, 5.017188, 5.082812", \
            "6.405773, 6.428125, 6.453125, 6.523437, 6.596875, 6.660938", \
            "9.611854, 9.568750, 9.629688, 9.718750, 9.717188, 9.815625"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.793701, 0.794531, 0.837500, 1.111094, 1.339063, 1.581250", \
            "3.092188, 3.092188, 3.093750, 3.123437, 3.195312, 3.296875", \
            "6.159375, 6.159375, 6.160938, 6.159570, 6.160937, 6.178125", \
            "11.528125, 11.526562, 11.525000, 11.526562, 11.525000, 11.526562", \
            "15.359375, 15.359375, 15.359375, 15.359375, 15.359375, 15.360938", \
            "23.025000, 23.025000, 23.025000, 23.025000, 23.026563, 23.025000"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.457913, 0.470313, 0.590156, 1.089063, 1.370313, 1.653125", \
            "1.787500, 1.784375, 1.788281, 1.965625, 2.150000, 2.370781", \
            "3.556250, 3.556250, 3.556250, 3.571875, 3.643750, 3.767187", \
            "6.656250, 6.654687, 6.654687, 6.656250, 6.657813, 6.667187", \
            "8.868750, 8.867188, 8.868750, 8.867187, 8.865625, 8.868750", \
            "13.293750, 13.293750, 13.296875, 13.293750, 13.293750, 13.293750"
          );
        }
      }
      timing () {
        related_pin: "A";
        timing_sense: non_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.528308, 0.532231, 0.608984, 0.839063, 0.937500, 1.018750", \
            "2.108637, 2.060699, 2.045313, 2.171875, 2.289531, 2.426562", \
            "4.216083, 4.153431, 4.093750, 4.090625, 4.142187, 4.226562", \
            "7.908136, 7.836500, 7.740625, 7.623437, 7.615625, 7.629687", \
            "10.544038, 10.469385, 10.364063, 10.200000, 10.162500, 10.146875", \
            "15.817443, 15.739771, 15.623438, 15.406250, 15.326563, 15.270313"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.317011, 0.317891, 0.368750, 0.398438, 0.403125, 0.403125", \
            "1.272860, 1.231250, 1.200000, 1.310938, 1.393750, 1.443750", \
            "2.550921, 2.496875, 2.423438, 2.398437, 2.445313, 2.521875", \
            "4.788380, 4.698437, 4.629687, 4.495312, 4.467188, 4.465625", \
            "6.377605, 6.323438, 6.226563, 6.035937, 5.990625, 5.957813", \
            "9.583679, 9.465625, 9.400000, 9.193750, 9.057813, 9.023438"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.793750, 0.794731, 0.871875, 1.227656, 1.484375, 1.762500", \
            "3.092188, 3.093750, 3.094141, 3.173437, 3.300000, 3.456250", \
            "6.159375, 6.160937, 6.159375, 6.159453, 6.173437, 6.229687", \
            "11.526563, 11.528125, 11.528125, 11.526562, 11.526563, 11.527539", \
            "15.359375, 15.359375, 15.359375, 15.359375, 15.359375, 15.359375", \
            "23.026563, 23.026563, 23.026563, 23.026563, 23.026563, 23.025000"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.459557, 0.492188, 0.698711, 1.401563, 1.767188, 2.125000", \
            "1.787500, 1.784375, 1.804688, 2.175000, 2.476562, 2.829688", \
            "3.557813, 3.556250, 3.556250, 3.665625, 3.850000, 4.079687", \
            "6.656250, 6.656250, 6.654687, 6.656172, 6.685938, 6.778125", \
            "8.867187, 8.868750, 8.868750, 8.865625, 8.870313, 8.890625", \
            "13.293750, 13.293750, 13.293750, 13.295313, 13.295313, 13.293750"
          );
        }
      }
    }
  }
}