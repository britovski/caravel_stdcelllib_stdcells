library (ls05_stdcells) {
  capacitive_load_unit (1.0, pf);
  current_unit: "1uA";
  default_operating_conditions: typical;
  delay_model: table_lookup;
  in_place_swap_mode: match_footprint;
  input_threshold_pct_fall: 50.0;
  input_threshold_pct_rise: 50.0;
  leakage_power_unit: "1nW";
  nom_process: 1.0;
  nom_temperature: 25.0;
  nom_voltage: 5.0;
  output_threshold_pct_fall: 50.0;
  output_threshold_pct_rise: 50.0;
  pulling_resistance_unit: "1kohm";
  slew_lower_threshold_pct_fall: 20.0;
  slew_lower_threshold_pct_rise: 20.0;
  slew_upper_threshold_pct_fall: 80.0;
  slew_upper_threshold_pct_rise: 80.0;
  time_unit: "1ns";
  voltage_unit: "1V";
  operating_conditions (typical) {
    process: 1.0;
    temperature: 25.0;
    voltage: 5.0;
  }
  lu_table_template (delay_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  lu_table_template (delay_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_net_transition;
  }
  lu_table_template (delay_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_net_transition;
  }
  power_lut_template (energy_template_5x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_5x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  power_lut_template (energy_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: total_output_net_capacitance;
    variable_2: input_transition_time;
  }
  lu_table_template (hold_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (hold_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  power_lut_template (passive_energy_template_5x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: input_transition_time;
  }
  power_lut_template (passive_energy_template_6x1) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: input_transition_time;
  }
  lu_table_template (recovery_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (recovery_template_6x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (removal_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x5) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  lu_table_template (setup_template_3x6) {
    index_1 (
      "1000.0, 1001.0, 1002.0"
    );
    index_2 (
      "1000.0, 1001.0, 1002.0, 1003.0, 1004.0, 1005.0"
    );
    variable_1: related_pin_transition;
    variable_2: constrained_pin_transition;
  }
  cell (AND2X1) {
    area: 114816.0;
    cell_leakage_power: 0.1173;
    pin (B) {
      capacitance: 0.0013475769826030654;
      direction: input;
      fall_capacitance: 0.001349489335613951;
      rise_capacitance: 0.0013456646295921797;
    }
    pin (A) {
      capacitance: 0.0011772475142280798;
      direction: input;
      fall_capacitance: 0.0011549769315575822;
      rise_capacitance: 0.0011995180968985778;
    }
    pin (Y) {
      direction: output;
      function: "(B&A)";
      timing () {
        related_pin: "B";
        timing_sense: positive_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.306880, 0.312843, 0.368750, 0.359375, 0.337500, 0.306250", \
            "1.201912, 1.149293, 1.134375, 1.271875, 1.353125, 1.387500", \
            "2.401503, 2.325167, 2.253125, 2.262500, 2.328125, 2.415625", \
            "4.498618, 4.416208, 4.303125, 4.162500, 4.156250, 4.187500", \
            "5.995440, 5.913203, 5.784375, 5.581250, 5.537500, 5.528125", \
            "8.995386, 8.910199, 8.768750, 8.493750, 8.396875, 8.328125"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.166557, 0.196875, 0.253125, 0.390625, 0.465625, 0.534375", \
            "0.615556, 0.615625, 0.637187, 0.759375, 0.831250, 0.903125", \
            "1.221987, 1.215625, 1.203125, 1.281250, 1.346875, 1.409375", \
            "2.284010, 2.268750, 2.240625, 2.237500, 2.271875, 2.328125", \
            "3.031336, 3.025000, 2.993750, 2.959375, 2.971875, 3.003125", \
            "4.553224, 4.543750, 4.500000, 4.440625, 4.428125, 4.421875"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.487292, 0.521281, 0.664063, 1.281250, 1.700000, 2.125000", \
            "1.928125, 1.929063, 1.971875, 2.303125, 2.521875, 2.760781", \
            "3.853125, 3.853125, 3.856250, 4.040625, 4.215625, 4.412500", \
            "7.225000, 7.225000, 7.221875, 7.243750, 7.340625, 7.481250", \
            "9.628125, 9.628125, 9.631250, 9.628125, 9.656250, 9.750000", \
            "14.443750, 14.443750, 14.440625, 14.440625, 14.444688, 14.446875"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.300234, 0.403594, 0.690625, 1.465625, 1.890625, 2.318750", \
            "1.169062, 1.175000, 1.290625, 1.926953, 2.337500, 2.756250", \
            "2.331250, 2.332422, 2.356250, 2.731250, 3.065625, 3.431250", \
            "4.371875, 4.371875, 4.375000, 4.481250, 4.659375, 4.921875", \
            "5.828125, 5.828125, 5.828125, 5.884375, 5.968750, 6.134375", \
            "8.740625, 8.740625, 8.740625, 8.762500, 8.796875, 8.856250"
          );
        }
      }
      timing () {
        related_pin: "A";
        timing_sense: positive_unate;
        cell_rise (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.298798, 0.307823, 0.375000, 0.428125, 0.440625, 0.446875", \
            "1.189553, 1.123759, 1.112500, 1.278125, 1.384375, 1.450000", \
            "2.388798, 2.298909, 2.212500, 2.231250, 2.312500, 2.415625", \
            "4.489038, 4.386480, 4.246875, 4.093750, 4.090625, 4.131250", \
            "5.989491, 5.883376, 5.725000, 5.496875, 5.450000, 5.443750", \
            "8.987331, 8.880273, 8.703125, 8.381250, 8.275000, 8.203125"
          );
        }
        cell_fall (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.160740, 0.187500, 0.228125, 0.303125, 0.343750, 0.381250", \
            "0.612933, 0.606250, 0.634687, 0.759375, 0.803125, 0.843750", \
            "1.221159, 1.206250, 1.193750, 1.296875, 1.378125, 1.437500", \
            "2.278692, 2.259375, 2.228125, 2.234375, 2.281250, 2.356250", \
            "3.028706, 3.015625, 2.981250, 2.946875, 2.968750, 3.015625", \
            "4.547468, 4.534375, 4.484375, 4.421875, 4.412500, 4.412500"
          );
        }
        rise_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.484358, 0.532510, 0.699688, 1.353125, 1.787500, 2.231250", \
            "1.931250, 1.932188, 1.984375, 2.343750, 2.578125, 2.840625", \
            "3.856250, 3.853125, 3.856250, 4.071875, 4.262500, 4.471875", \
            "7.221875, 7.221875, 7.225000, 7.259375, 7.368750, 7.525000", \
            "9.631250, 9.631250, 9.631250, 9.631250, 9.675000, 9.784375", \
            "14.443750, 14.440625, 14.440625, 14.443750, 14.443750, 14.450000"
          );
        }
        fall_transition (delay_template_6x6) {
          index_1 (
            "0.100000, 0.500000, 1.200000, 3.000000, 4.000000, 5.000000"
          );
          index_2 (
            "0.060000, 0.240000, 0.480000, 0.900000, 1.200000, 1.800000"
          );
          values (
            "0.296016, 0.401094, 0.706250, 1.509375, 1.934375, 2.356250", \
            "1.166562, 1.178125, 1.309375, 1.979062, 2.415625, 2.881250", \
            "2.334375, 2.331250, 2.371875, 2.787500, 3.137500, 3.525000", \
            "4.371875, 4.371875, 4.378125, 4.543750, 4.740625, 5.021875", \
            "5.828125, 5.828125, 5.831250, 5.934375, 6.059375, 6.243750", \
            "8.740625, 8.740625, 8.740625, 8.778125, 8.850000, 8.956250"
          );
        }
      }
    }
  }
}